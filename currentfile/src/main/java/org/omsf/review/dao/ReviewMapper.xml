<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.omsf.review.dao.ReviewRepository">

	<!-- 리뷰 생성 -->
	<insert id="createReview">
		INSERT INTO REVIEW
			(RATING, CONTENT, CREATEDAT, MEMBER_USERNAME, STORE_STORENO)
		VALUES
			(#{rating}, #{content}, sysdate, #{memberUsername}, #{storeStoreNo})
	</insert>
	
	<!-- 가게별 리뷰 목록 가져오기 -->
	<select id="getReviewListByStoreId" resultType="org.omsf.review.model.Review">
		SELECT
			REVIEWNO AS "reviewNo",
			RATING AS "rating",
			CONTENT AS "content",
			CREATEDAT AS "createdAt",
			MODIFIEDAT AS "modifiedAt",
			MEMBER_USERNAME AS "memberUsername",
			STORE_STORENO AS "storeStoreNo"
		FROM REVIEW
		WHERE STORE_STORENO = #{storeNo}
		ORDER BY CREATEDAT DESC
	</select>
	
	<!-- 마이페이지 리뷰 목록 가져오기 -->
	<select id="getReviewListByUsername" resultType="org.omsf.review.model.Review">
		SELECT
			REVIEWNO AS "reviewNo",
			RATING AS "rating",
			CONTENT AS "content",
			CREATEDAT AS "createdAt",
			MODIFIEDAT AS "modifiedAt",
			MEMBER_USERNAME AS "memberUsername",
			STORE_STORENO AS "storeStoreNo"
		FROM REVIEW
		WHERE MEMBER_USERNAME = #{userName}
		ORDER BY CREATEDAT DESC
	</select>
	
	<!-- 리뷰 상세글 가져오기 -->
	<select id="getReviewByReviewNo" resultType="org.omsf.review.model.Review">
		SELECT
			REVIEWNO AS "reviewNo",
			RATING AS "rating",
			CONTENT AS "content",
			CREATEDAT AS "createdAt",
			MODIFIEDAT AS "modifiedAt",
			MEMBER_USERNAME AS "memberUsername",
			STORE_STORENO AS "storeStoreNo"
		FROM REVIEW
		WHERE REVIEWNO = #{reviewNo}
	</select>
	
	<!-- 리뷰 수정 -->
	<update id="updateReview">
		UPDATE REVIEW SET
			CONTENT = #{review.content},
			RATING = #{review.rating},
			MODIFIEDAT = sysdate
		WHERE REVIEWNO = #{reviewNo}
	</update>
	
	<!-- 리뷰 삭제 -->
	<delete id="deleteReview">
		DELETE
			FROM REVIEW
		WHERE REVIEWNO = #{reviewNo}
	</delete>
	
	<!-- 가게별 최근 리뷰 5개 가져오기 -->
	<select id="getReviewListOnStore" resultType="org.omsf.review.model.Review">
		SELECT
			REVIEWNO AS "reviewNo",
			RATING AS "rating",
			CONTENT AS "content",
			CREATEDAT AS "createdAt",
			MODIFIEDAT AS "modifiedAt",
			MEMBER_USERNAME AS "memberUsername",
			STORE_STORENO AS "storeStoreNo"
		FROM REVIEW
		WHERE STORE_STORENO = #{storeNo}
		ORDER BY CREATEDAT DESC
		OFFSET 0 ROWS FETCH
		FIRST 5 ROWS ONLY
	</select>
	
</mapper>